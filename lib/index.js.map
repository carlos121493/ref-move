{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;;;AAAA;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,SAAS,WAAT,CAAqB,QAArB,EAA+B;AAC9B,KAAI;AACH,SAAO,aAAG,QAAH,CAAY,QAAZ,EAAsB,MAAtB,EAAP;AACA,EAFD,CAEE,OAAM,CAAN,EAAS;AACV,SAAO,KAAP;AACA;AACD;;AAED,SAAS,WAAT,CAAqB,QAArB,EAA+B;AAC9B,KAAM,UAAU,YAAY,QAAZ,CAAhB;AACA,KAAG,OAAH,EAAY;AACX,SAAO,aAAG,YAAH,CAAgB,QAAhB,EAA0B,OAA1B,CAAP;AACA,EAFD,MAEO;AACN,SAAO,QAAP;AACA;AACD;;AAED,SAAS,YAAT,CAAsB,IAAtB,EAA4B;AAC3B,KAAM,UAAU,YAAY,IAAZ,CAAhB;AACA,QAAO,uBAAe,cAAf,CAA8B,OAA9B,EAAuC,MAAvC,CAA8C,uBAAe,OAAf,CAAuB,OAAvB,CAA9C,EAA+E,MAA/E,CAAsF;AAAA,SAAQ,uBAAe,gBAAf,CAAgC,IAAhC,CAAR;AAAA,EAAtF,KAAwI,EAA/I;AACA;;AAED,SAAS,WAAT,CAAqB,IAArB,EAA2B;AAC1B,QAAO,aAAa,IAAb,EAAmB,MAA1B;AACA;;AAED,SAAS,eAAT,CAAyB,MAAzB,EAAiC,OAAjC,EAA0C;AACzC,KAAI,CAAC,MAAL,EAAa;AACZ,QAAM,4CAAN;AACA;;AAED,KAAM,UAAU,OAAO,OAAP,KAAmB,QAAnB,GAA8B,OAA9B,GAAwC,YAAY,MAAZ,CAAxD;AACA,KAAM,OAAO,YAAY,OAAZ,CAAb;AACA,KAAG,CAAC,CAAC,IAAL,EAAW;AAAA;AACV,OAAM,WAAW,YAAY,MAAZ,IAAsB,eAAK,OAAL,CAAa,MAAb,CAAtB,GAA6C,MAA9D;AACA,OAAM,YAAY,IAAI,MAAJ,CAAW,aAAa,OAAb,EAAsB,IAAtB,CAA2B,GAA3B,CAAX,EAA4C,GAA5C,CAAlB;AACA,OAAM,kBAAkB,QAAQ,OAAR,CAAgB,SAAhB,EAA2B;AAAA,WAAQ,eAAK,IAAL,CAAU,QAAV,EAAoB,IAApB,CAAR;AAAA,IAA3B,CAAxB;AACA;AAAA,OAAO;AAAP;AAJU;;AAAA;AAKV;AACD,QAAO,OAAP;AAEA;;kBAEc;AACd,yBADc;AAEd,yBAFc;AAGd,2BAHc;AAId,yBAJc;AAKd;AALc,C","file":"index.js","sourcesContent":["import 'babel-polyfill';\nimport matchedRequire from 'match-require';\nimport {isRelative} from 'path';\nimport path from 'path';\nimport fs from 'fs';\n\nfunction hasFilePath(fileName) {\n\ttry {\n\t\treturn fs.statSync(fileName).isFile();\n\t} catch(e) {\n\t\treturn false;\n\t}\n}\n\nfunction readContent(fileName) {\n\tconst hasPath = hasFilePath(fileName);\n\tif(hasPath) {\n\t\treturn fs.readFileSync(fileName, 'utf-8');\n\t} else {\n\t\treturn fileName;\n\t}\n}\n\nfunction findRelative(file) {\n\tconst content = readContent(file);\n\treturn matchedRequire.findAllImports(content).concat(matchedRequire.findAll(content)).filter(item => matchedRequire.isRelativeModule(item)) || [];\n}\n\nfunction hasRelative(file) {\n\treturn findRelative(file).length;\n}\n\nfunction replaceRelative(source, content) {\n\tif (!source) {\n\t\tthrow('please pass correct source or content info');\n\t}\n\n\tconst fileCon = typeof content === 'string' ? content : readContent(source);\n\tconst hasR = hasRelative(fileCon);\n\tif(!!hasR) {\n\t\tconst filePath = hasFilePath(source) ? path.dirname(source) : source;\n\t\tconst replaceRe = new RegExp(findRelative(fileCon).join('|'), 'g');\n\t\tconst transferContent = fileCon.replace(replaceRe, item => path.join(filePath, item));\n\t\treturn transferContent;\n\t}\n\treturn fileCon;\n\n}\n\nexport default {\n\thasFilePath,\n\treadContent,\n\tfindRelative,\n\thasRelative,\n\treplaceRelative\n}"]}